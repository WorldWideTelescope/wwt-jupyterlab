# Copyright 2020 the .NET Foundation
# Licensed under the MIT License

parameters:
- name: isMainDev
  type: boolean
  default: false
- name: isRelease
  type: boolean
  default: false

jobs:

# Deployment jobs that might happen on updates to either `master` *or* `rc`.
# On updates to master, we deploy everything under the "latest" name. On
# updates to `rc`, we deploy some subset of the projects that can only be
# determined at runtime.

- job: deploy_research_app
  pool:
    vmImage: windows-latest
  variables:
  - group: Deployment Credentials
  steps:
  - template: azure-job-setup.yml

  # Set the "deplpoyment tag" for the research app. The variable
  # $RESEARC_APP_DEPLOYMENT_TAG is set to either "latest", if we're doing a
  # 'main dev' release (= merge to master), "skip", if we shouldn't release it;
  # or the major version number, if we're making a real official release of the
  # package.
  - bash: |
      set -euo pipefail
      if [[ ${isMainDev} == True ]] ; then
        tag=latest
      elif cranko show if-released --exit-code @wwtelescope/research-app ; then
        tag="$(cranko show version @wwtelescope/research-app |cut -d. -f1)"
      else
        tag=skip
      fi
      echo "research app deployment tag: $isMainDev, $isRelease => $tag"
      echo "##vso[task.setvariable variable=RESEARCH_APP_DEPLOYMENT_TAG;]$tag"
    displayName: Determine deployment tag
    env:
      isMainDev: ${{ parameters.isMainDev }}
      isRelease: ${{ parameters.isRelease }}

  - task: AzureFileCopy@3
    condition: and(succeeded(), ne(variables['RESEARCH_APP_DEPLOYMENT_TAG'], 'skip'))
    displayName: Deploy research web application
    inputs:
      SourcePath: '$(Pipeline.Workspace)/research-app'
      azureSubscription: 'aas@wwtadmindotnetfoundation'
      Destination: 'AzureBlob'
      storage: 'wwtwebstatic'
      ContainerName: '$web'
      blobPrefix: research/$(RESEARCH_APP_DEPLOYMENT_TAG)

  - task: AzurePowerShell@4
    condition: and(succeeded(), ne(variables['RESEARCH_APP_DEPLOYMENT_TAG'], 'skip'))
    displayName: CDN purge - research web app
    inputs:
      azureSubscription: 'aas@wwtadmindotnetfoundation'
      azurePowerShellVersion: 'LatestVersion'
      scriptType: 'inlineScript'
      inline: |
        Unpublish-AzCdnEndpointContent `
          -ProfileName wwt-cdn-01 `
          -ResourceGroupName wwt-web01 `
          -EndpointName wwtweb-prod `
          -PurgeContent '/research/$(RESEARCH_APP_DEPLOYMENT_TAG)/*'

# Deployment jobs that should only happen on updates to `rc`, i.e.
# primary releases.

- ${{ if parameters.isRelease }}:
  - job: branch_and_tag
    pool:
      vmImage: ubuntu-20.04
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeou pipefail
        cranko release-workflow tag
        git push --tags origin release:release
      displayName: Tag and push
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

  - job: github_releases
    dependsOn: branch_and_tag # otherwise, GitHub creates the tags itself!
    pool:
      vmImage: ubuntu-20.04
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeou pipefail
        cranko github create-releases
      displayName: Create GitHub releases
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

  - job: npm_publish
    pool:
      vmImage: ubuntu-20.04
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupBuild: true
        setupNpm: true
    - bash: npm run build
      displayName: NPM build
    - bash: |
        set -xeou pipefail
        cranko npm foreach-released npm publish
      displayName: Publish to NPM
    - bash: shred ~/.npmrc
      displayName: Clean up credentials
