# Copyright 2020-2021 the .NET Foundation
# Licensed under the MIT License

parameters:
- name: isMainDev
  type: boolean
  default: false
- name: isRelease
  type: boolean
  default: false

jobs:

- ${{ if parameters.isMainDev }}:
  - job: dummy_setup_only
    pool:
      vmImage: ubuntu-latest
    steps:
    - template: azure-job-setup.yml

# Deployment jobs that should only happen on updates to `rc`, i.e.
# primary releases.

- ${{ if parameters.isRelease }}:
  - job: branch_and_tag
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeou pipefail
        cranko release-workflow tag
        git push --tags origin release:release
      displayName: Tag and push
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

  - job: github_releases
    dependsOn: branch_and_tag # otherwise, GitHub creates the tags itself!
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeou pipefail
        cranko github create-releases
      displayName: Create GitHub releases
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

  - job: npm_publish
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupBuild: true
        setupNpm: true

    - bash: |
        set -euo pipefail
        source activate-conda.sh
        set -x
        jlpm install
      displayName: jlpm install

    - bash: |
        set -euo pipefail
        source activate-conda.sh
        set -x
        cranko npm foreach-released jlpm publish
      displayName: Publish to NPM

    - bash: shred ~/.npmrc
      displayName: Clean up credentials

  - job: python_publish
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupBuild: true
    - bash: |
        set -euo pipefail
        source activate-conda.sh
        set -x
        \conda install -y twine

        cranko python install-token

        if cranko show if-released --exit-code wwt_jupyterlab_extension ; then
          twine upload $BASH_WORKSPACE/pypa/*.tar.gz
        fi
      displayName: Publish PyPI releases
      env:
        PYPI_TOKEN: $(PYPI_TOKEN)
