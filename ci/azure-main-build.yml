# Copyright 2020-2021 the .NET Foundation
# Licensed under the MIT License

# Main build stage.

jobs:

# Linux build, which publishes the main artifacts

- job: build_linux
  pool:
    vmImage: ubuntu-22.04

  steps:
  - template: azure-job-setup.yml
    parameters:
      setupBuild: true

  # Build the JS package

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm install
    displayName: jlpm install

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm build
    displayName: jlpm build

  # Create and stage JS artifacts. (No reason not to do this ASAP -- these can
  # help debug build problems.)

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm pack
    displayName: jlpm pack

  - bash: |
      set -xeuo pipefail
      mkdir -p $ARTIFACT_STAGING/npm
      cp *.tgz $ARTIFACT_STAGING/npm
    displayName: Stage NPM package artifacts

  - task: PublishPipelineArtifact@0
    displayName: Publish NPM package artifacts
    inputs:
      artifactName: npm
      targetPath: $(Build.ArtifactStagingDirectory)/npm

  # Test the JS package

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm run test
    displayName: jlpm test

  # Build the Python package

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jupyter labextension build
    displayName: jupyter labextension build

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      cd wwt_jupyterlab_extension
      python -m build .
    displayName: python -m build

  # Python artifact

  - bash: |
      set -xeuo pipefail
      mkdir -p $ARTIFACT_STAGING/pypa
      cp wwt_jupyterlab_extension/dist/* $ARTIFACT_STAGING/pypa
    displayName: Stage Python package artifacts

  - task: PublishPipelineArtifact@0
    displayName: Publish Python package artifacts
    inputs:
      artifactName: pypa
      targetPath: $(Build.ArtifactStagingDirectory)/pypa


# MacOS - build/test but no artifacts

- job: build_macos
  pool:
    vmImage: macos-12
  steps:
  - template: azure-job-setup.yml
    parameters:
      setupBuild: true

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm install
    displayName: jlpm install

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm build
    displayName: jlpm build

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm run test
    displayName: jlpm test

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jupyter labextension build
    displayName: jupyter labextension build

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      cd wwt_jupyterlab_extension
      python -m build .
    displayName: python -m build


# (JavaScript) Lint

- job: eslint
  pool:
    vmImage: ubuntu-latest
  steps:
  - template: azure-job-setup.yml
    parameters:
      setupBuild: true

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm install
    displayName: jlpm install

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      jlpm run eslint:check
    displayName: jlpm eslint
